---
title: "Djamaldbz - Modélisation des données de comptage"
bibliography: bib_palu_poisson.bib
link-citations: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, eval = TRUE, message = FALSE, warning = FALSE)
```

```{r, echo = FALSE}
capTabNo = 1; capFigNo = 1;
capTab = function(x){
 
    x = paste0("Tableau ",capTabNo," : ",x)
    capTabNo <<- capTabNo + 1
 x
}

capFig = function(x){
 
    x = paste0("Figure ",capFigNo," : ",x)
    capFigNo <<- capFigNo + 1
    x
}

repeated_capFig = function(x){
  x = paste0(paste0(paste0("Figure ", capFigNo), ""), x)
  x
}
options(OutDec= ",")
```


## Description du jeu de données

|       Le monde actuel est confronté à de multiples risques sanitaires, notamment ceux liés aux maladies vectorielles telles que le paludisme. En effet, le paludisme est la maladie la plus mortelle transmise par les moustiques dans le monde [@noauthor_technical_strategy]. Selon l'OMS, plusieurs millions de personnes ont été infectées par le paludisme en 2022 (environ 249 millions), entraînant près de 608 000 décès[@noauthor_conseil_nodate_briefing2023].

Plusieurs actions ont été menées pour lutter contre ce fléau, notamment la distribution de moustiquaires, les campagnes de sensibilisation à l'hygiène, la chimioprévention saisonnière, ainsi que le traitement intermittent pour les femmes enceintes.

Djamaland a été choisi comme pays pour la mise en oeuvre d'une intervention progressive, principalement en raison de sa forte incidence du paludisme. L'intervention comprend **quatre phases** et couvre l'ensemble des régions du pays.

Voici la description de chaque phase :

-   **Phase 1** : Aucun village n'a reçu d'intervention.

-   **Phase 2** : Les quatre régions ont bénéficié de la distribution de moustiquaires.

-   **Phase 3** : En plus de la distribution de moustiquaires, des actions de sensibilisation sur les bonnes pratiques d'utilisation ont été mises en place.

-   **Phase 3 suite** : En complément de la distribution et de la sensibilisation, un programme de partage des techniques de bonne hygiène a été intégré.

La base contenait également des informations sur les facteurs environnementaux (pression atmosphérique, vitesse du vent, indice UV, humidité relative).

Le but de cette étude est donc d'évaluer l'impact de l'intervention durant ces différentes phases.

```{r, echo=FALSE}
set.seed(123)

# Paramètres
duree <- 5 * 52  # 5 ans en semaines
regions <- c("R1", "R2", "R3", "R4")
saisons <- c("Pluvieuse", "Seche")
phases <- c(0, 1, 2, 3, 4)  # Phase 0 = pas d'intervention

# Génération des données
data <- expand.grid(
  semaine = 1:duree,
  region = regions
)

data$saison <- ifelse((data$semaine %% 52) %in% 20:40, "Pluvieuse", "Seche")
data$phase <- cut(
  data$semaine, 
  breaks = c(0, 130, 156, 208, 260, duree + 1), 
  labels = phases, 
  include.lowest = TRUE,
  right = FALSE
)
data$phase <- as.factor(data$phase)  # Correction pour phase comme facteur

data$taux_couverture <- ifelse(data$phase == 0, 
                               runif(nrow(data), 0.1, 0.3), 
                               runif(nrow(data), 0.4, 0.9))

data$temperature <- rnorm(nrow(data), mean = ifelse(data$saison == "Pluvieuse", 24, 29), sd = 3.4)
data$humidite <- rnorm(nrow(data), mean = ifelse(data$saison == "Pluvieuse", 80, 50), sd = 5)
data$pluviometrie <- ifelse(data$saison == "Pluvieuse", runif(nrow(data), 50, 200), runif(nrow(data), 0, 50))
data$vitesse_vent <- runif(nrow(data), 2, 10)
data$pression_atmospherique <- rnorm(nrow(data), mean = 1013, sd = 10)  # Pression atmosphérique (hPa)
data$indice_chaleur <- 0.5 * (data$temperature + 61 + ((data$temperature - 68) * 1.2) + (data$humidite * 0.094))  # Calcul de l'indice de chaleur
data$couverture_nuageuse <- runif(nrow(data), 0, 100)
data$vent_hauteur <- runif(nrow(data), 5, 15) 
data$indice_uv <- runif(nrow(data), 0, 12) 
data$temperature_eau <- rnorm(nrow(data), mean = ifelse(data$saison == "Pluvieuse", 26, 30), sd = 2)  

data$humidite_ombrage <- rnorm(nrow(data), mean = ifelse(data$saison == "Pluvieuse", 90, 60), sd = 5)  

data$aerosols <- runif(nrow(data), 0, 100)

data$cas_palustres <- rpois(nrow(data), 
                            lambda = ifelse(data$phase == "0", 
                                            runif(nrow(data), 50, 200), 
                                            runif(nrow(data), 20, 100)))

# Ajouter des effets d'humidité, pluviométrie et vitesse du vent sur le nombre de cas
# Effet positif de l'humidité et de la pluviométrie sur les cas de paludisme
data$cas_palustres <- round(data$cas_palustres * (1 + 0.01 * (data$humidite - 60)))  # Effet de l'humidité (60 est une valeur moyenne d'humidité)
data$cas_palustres <- round(data$cas_palustres * (1 + 0.005 * (data$pluviometrie)))  # Effet de la pluviométrie

# Effet négatif de la vitesse du vent sur les cas de paludisme
data$cas_palustres <- round(data$cas_palustres * (1 - 0.02 * (data$vitesse_vent)))   # Effet de la vitesse du vent

# S'assurer que le nombre de cas n'est jamais négatif
data$cas_palustres <- pmax(data$cas_palustres, 0)

data <- cbind(data , dates = rep(seq.Date(from = as.Date("2021-01-08"), to = as.Date("2025-12-31"), by = "week") , 4))

data$phase <- as.character(data$phase) # Convertir en caractère
data$phase <- ifelse(data$phase == "4", "3", data$phase) # Remplacer "4" par "3"
data$phase <- factor(data$phase) # Reconvertir en facteur

colnames(data) <- c("Semaine", "Région", "Saison", "Phase", 
                    "Taux de couverture", "Température", "Humidité", "Pluviométrie", 
                    "Vitesse du vent", "Pression atmosphérique", "Indice de chaleur", "Couverture nuageuse", 
                    "Vent en hauteur", "Indice UV", "Température de l'eau", "Humidité à l’ombre", 
                    "Aérosols", "Cas palustres", "Dates")
```

```{r}
library(dplyr)
library(ggplot2)
library(plotly)
library(tidyverse)
library(gtsummary)
library(ggplot2)
library(reshape2)
library(MASS) 
library(car)
```

> Information sur les variables

|       On affiche ici les informations sur les variables de la base de données. On voit qu'il y'a 19 colonnes (variables) et 1040 lignes (observations).

```{r}
data %>%
  glimpse()
```

|       On affiche ensuite un résumé statistique des variables dans le but de reperer certaines anomalies s'il y en a. Mais dans ce cas, il y'en a pas car j'ai moi même généré les données et donc j'ai veillé à ce qu'il n y ait pas de valeurs manquantes.

```{r}
library(dplyr)
data %>%
  summary()
```

|       Pour cette étude, la variable d'intérêt est le nombre de nouveaux cas de paludisme enregistrés chaque semaine (t), avec des valeurs variant de 1 à 260 dans les quatre régions du pays.

## Description du nombre de cas pour chaque région

```{r evolution, fig.align='center', fig.cap=capFig("Evolution du nombre de cas de paludisme entre 2021 et 2025"), fig.height=9, fig.width=12}
p1 <- ggplot(data, aes(x = Dates, y = `Cas palustres`, color = Région)) +
  geom_line() +
  facet_wrap(~Région, scales = "free_y") +
  labs(title = "", x = "Année", y = "Nombre de cas") +
  geom_vline(xintercept = as.numeric(as.Date("2023-06-30")), 
           linetype = "dashed", color = "darkred", size = 0.5) +
  geom_vline(xintercept = as.numeric(as.Date("2023-12-29")), 
           linetype = "dashed", color = "darkblue", size = 0.5) +
  geom_vline(xintercept = as.numeric(as.Date("2024-12-24")), 
           linetype = "dashed", color = "royalblue", size = 0.5) +
  theme_light() +
  scale_x_date(date_breaks = "12 months", date_labels = "%b %Y") +  
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

p_interactif1 <- ggplotly(p1)

p_interactif1
```

|       La courbe des séries temporelles des cas de paludisme de 2021 à 2025 pour les quatre régions de l’étude montre une tendance générale à la baisse, particulièrement marquée après la mise en place des interventions. L'interpretation reste quasi pareille pour toute les regions.

Le test de Mann-Kendall confirme statistiquement cette tendance décroissante significative (p-value < 0.05), avec une diminution notable observée dans chaque région dès l’implémentation de la première phase du projet (figure \@ref{fig:evolution}).

Par ailleurs, le test de Kruskal-Wallis appliqué aux différentes phases du projet révèle une différence significative entre le nombre de cas observés avant et après les interventions (p-value < 0.05), suggérant un impact positif des mesures mises en place.

Enfin, le pic épidémique le plus élevé a été observé en 2021 dans les régions 1, 3 et 4, avec respectivement 392, 396 et 466 cas de paludisme enregistrés aux mois de septembre et octobre. Pour la région 2, le pic a été atteint en 2022, avec 384 cas observés (figure \@ref{fig:evolution}).




## Modélisation

### Analyse de la corrélation entre les variables météorologiques

|       L'analyse de la corrélation entre les variables montre des liens de corrélation relativement faibles. De plus, le calcul de l'indice de KMO, permettant de vérifier l'adéquation des données à l'analyse en composantes principales, a montré une valeur de 0,5, confirmant le faible niveau de corrélation entre les covariables et ne justifiant ainsi pas la réalisation d'une ACP.

```{r, fig.align='center', fig.cap=capFig("Heatmap des Corrélations entre Variables Météorologiques"), fig.height=12, fig.width=12}
data_meteo <- data[ , c(6:10 , 13)]

##-- Calcul de la matrice de corrélation
cor_matrix <- cor(data_meteo, use = "complete.obs")

##-- Transformation de la matrice de corrélation en format long pour ggplot2
cor_melted <- melt(cor_matrix)
cor_melted$value <- round(cor_melted$value , 2)
colnames(cor_melted)[3] <- "Coefficient de corrélation"

##-- Création de la heatmap
cor_plot <- ggplot(cor_melted, aes(x = Var1, y = Var2, fill = `Coefficient de corrélation`)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +  
##-- Bleu pour négatif, rouge pour positif
  theme_light() +
  labs(x = "Variables",
       y = "Variables") +
  theme(
    axis.text.x = element_text(angle = 90, hjust = 1, size = 10, face = "bold"),
    axis.text.y = element_text(size = 10, face = "bold"),
    axis.title.x = element_text(size = 10, face = "bold"),
    axis.title.y = element_text(size = 10, face = "bold")
  )
ggplotly(cor_plot)
```

```{r, warning=FALSE, message=FALSE}
library(psych)
data_meteo <- data[, 6:17]
KMO(data_meteo)
```

### Modélisation

```{r}
model <- glm(`Cas palustres` ~ Température + `Taux de couverture` + Humidité + Pluviométrie + `Vitesse du vent` + `Pression atmosphérique` + Phase, 
             data = data, family = poisson())

#summary(model, exponentiate = TRUE)
```

```{r}
tbl_regression(model, exponentiate = TRUE) %>%
  add_global_p() %>%
  modify_header(label = "**Variables**") %>%
  bold_labels() %>%
  modify_caption(caption = capTab("Résultats de la régression de Poisson : Analyse des facteurs de risque"))
 
```

> Évaluation du modèle de Poisson

|       Ici le stepAIC permet de fournir une sélection de variables qui améliore le modèle (***critère d'AIC que j'aborderai dans une autre publication***). L'objectif est de minimiser l'AIC, donc nous devons conserver les variables dont la suppression entraîne une forte augmentation de l'AIC.


> Décision de suppression des variables

La sélection des variables repose sur leur impact sur l'AIC (Akaike Information Criterion). Plus l'AIC augmente après suppression d'une variable, plus cette dernière est importante pour le modèle. Les variables sont classées en deux groupes : celles à conserver absolument et celles qui ont un impact modéré. La fonction `stepAIC` permet de faire automatiquement la sélection des variables importante dans le modèle.

```{r}
mod1_poisson <- stepAIC(model) 
```

>> **A conserver absolument**

Ces variables entraînent une forte augmentation de l'AIC si elles sont supprimées, ce qui indique qu'elles contribuent de manière significative à l'explication des cas palustres.

- **Phase** : +2998 d'AIC
- **Pluviométrie** : +2038 d'AIC
- **Humidité** : +1125 d'AIC

>> **Variables modérément importantes**

Ces variables ont un impact plus faible sur l'AIC et peuvent potentiellement être supprimées sans altérer significativement la qualité du modèle.

- **Vitesse du vent** : +419 d'AIC
- **Pression atmosphérique** : +26 d'AIC
- **Taux de couverture** : +15 d'AIC
- **Température** : +8 d'AIC

>> Décision

Les variables **Phase**, **Pluviométrie** et **Humidité** doivent impérativement être conservées, car leur suppression entraîne une augmentation très importante de l'AIC. En revanche, **Vitesse du vent**, **Pression atmosphérique**, **Taux de couverture** et **Température** ont un impact plus limité et peuvent être envisagées pour la suppression si nécessaire.


```{r}
tbl_regression(model, exponentiate = TRUE) %>%
  add_global_p() %>%
  modify_header(label = "**Variables**") %>%
  bold_labels() %>%
  modify_caption(caption = capTab("Résultats de la régression de Poisson suite au stepAIC : Analyse des facteurs de risque"))
 
```


```{r, fig.align='center', fig.height=7, fig.width=12, fig.cap=capFig("Graphiques de diagnostic du modèle de poisson ajusté")}
par(mfrow = c(2,2))
plot(mod1_poisson)
```

|       L'analyse des diagnostics du modèle montre que les résidus de Pearson présentent une répartition aléatoire des points autour de zéro, suggérant l'absence de structure particulière dans les erreurs.

De plus, dans le graphique Q-Q, les points suivent approximativement la ligne diagonale, indiquant que les résidus sont normalement distribués, ce qui est un bon signe pour la validité des hypothèses du modèle.

La structure des erreurs standard de Pearson montre également une répartition équilibrée autour de la ligne rouge de référence, et un motif aléatoire est observé au niveau des écarts types de Pearson.

Tous ces éléments suggèrent une bonne adéquation du modèle aux données et confirment que les hypothèses sous-jacentes sont raisonnablement respectées.

>> Analyse de la surdispersion dans un modèle de Poisson

```{r, include=FALSE}
mod1_poisson$deviance / mod1_poisson$df.residual
```

```{r}
mod1_poisson %>% 
  performance::check_overdispersion()

```


|       Ce resultat suggère qu'il y'a surdispersion dans les données (***p-values < 0,05***). Dans ce cas plusieurs alternatives sont possibles. Nous avons entre autres le modèle de regression binomiale négative qui est mélange de poisson-gamma et donc prend en compte un paramètre qui est celui de la dispersion. On a également le modèle quasi-poisson qui lui supprime la surdispersion présente dans les données à l'inverse du modèle binomial négatif qui l'estime.

>> Alternative : Le modele binomial negative

|       En alternative au modèle de Poisson en cas de surdispersion, le modèle binomial négatif a été mentionné [@cameron_regression_2013]. En effet, ce modèle intègre un paramètre supplémentaire qui permet de mieux capturer la variabilité excessive des données, offrant ainsi une estimation plus fiable et adaptée aux situations où la variance des observations est supérieure à la moyenne.

```{r}
model_nb <- glm.nb(`Cas palustres` ~ Température + `Taux de couverture` + Humidité + Pluviométrie + `Vitesse du vent` + `Pression atmosphérique` + Phase, 
                   data = data)

model_nb <- stepAIC(model_nb)
```

```{r}
tbl_regression(model_nb, exponentiate = TRUE) %>%
  add_global_p() %>%
  modify_header(label = "**Variables**") %>%
  bold_labels() %>%
  modify_caption(caption = capTab("Résultats de la régression de Binomial négative : Analyse des facteurs de risque"))
```

>> Interpretation des résultats

::: {#IC .callout-important} 
# Intervalles de confiances des variables météorologiques

Les intervalles de confiance des variables météorologiques sont aussi petits car les données ont été générées. Et donc du coup avec de vraies données, il est possible de se retrouver avec des intervalles de confiance qui pourraient ne pas ressembler à ceux-ci.
:::

- L'**humidité** augmente le nombre de cas de paludisme de 1% tandis que **la vitesse** de vent diminue le nombre de cas de paludisme de 3% (***IC =[2% ; 4%]***) toute chose étant égale par ailleur (l'influence des autres variables étant retirée).

- **La première phase d'interventions** a permis de reduire le nombre de cas de paludisme de 56% (***IC = [53% ; 60%]***) par rapport à la phase 0 pendant laquelle il n'y avait pas encore d'intervention toute chose etant égale par ailleurs.

- **La seconde phase d'interventions** a permis de reduire le nombre de cas de paludisme de 53% (***IC = [49% ; 55%]***) par rapport à la phase 0 pendant laquelle il n'y avait pas encore d'intervention toute chose etant égale par ailleurs.

- **La troisième phase d'interventions** a permis de reduire le nombre de cas de paludisme de 49% (***IC = [45% ; 52%]***) par rapport à la phase 0 pendant laquelle il n'y avait pas encore d'intervention toute chose etant égale par ailleurs.

## Annexes

### Diagnostic du modèle binomial négatif

>> Analyse des résidus

```{r, fig.align='center', fig.height=7, fig.width=12, fig.cap=capFig("Graphiques de diagnostic du modèle binomial négatif ajusté")}
par(mfrow = c(2,2))
plot(model_nb)
```

>> Multicolinéarité du modèle binomial négatif

```{r, fig.align='center', fig.cap=capFig("VIF du modèle binomial négatif"), fig.height=5.5, fig.width=12}
plot(performance::check_collinearity(model_nb))
```

|       On remarque que toutes les variables ont un **faible VIF < 5**. Cela suggère qu'il n'y a pas de multicolinéarité entre les variables utilisées dans le modèle.


### Test de Mann-Kendall

|       Ce test a été utilisé avec les alternatives unilatérales droite et gauche pour tester la présence de tendances strictement croissantes ou strictement décroissantes de la serie nombre de cas hebdomadire de paludisme dans chaque région d'etudes.

**Hypothèses du test**

$$
\begin{cases}
H_0 : \text{La série ne présente pas de tendance monotone (croissante ou décroissante).} \\
H_1 : \text{La série présente une tendance monotone (croissante ou décroissante).}
\end{cases}
$$ 
**Interprétation**

-   Si la **p-value** est inférieure au seuil de signification choisi (généralement **0,05**),\
    alors il y a suffisamment de preuves pour conclure que la série (**nombre de cas de paludisme**

    ou **incidences cumulées** durant une phase) présente une tendance monotone.\

-   Dans le cas contraire, on conclut que la série ne présente **aucune tendance significative**.

### Description du modèle de Poisson

|       Soit ($Y$) le nombre de cas de paludisme hebdomadire Il s'agit d'une variable quantitative discrète prenant ses valeurs dans un intervalle défini. Supposons en outre que ces événements sont indépendants, c'est-à-dire que l'occurrence d'un premier cas n'affecte pas la probabilité d'en observer un autre.

Dans ce contexte, la variable ($Y$) suit une distribution de Poisson, avec un paramètre (\lambda) représentant le taux moyen d'apparition d'un cas de paludisme. La probabilité d'observer une valeur donnée de ($Y$), en fonction de (\lambda), est exprimée par la formule suivante :

$$ P(Y = y) = \frac{\lambda^y}{y!} e^{-\lambda} $$

La distribution de Poisson n'a qu'un paramètre: (\lambda) correspond à la fois à sa moyenne et à sa variance.

$$E(\lambda) = V(\lambda)$$ Le modèle de Poisson a été utilisé pour identifier les facteurs associés à la survenue du cas de paludisme, principalement en raison de la nature discrète de notre variable dépendante.

La régression de Poisson s'inscrit dans le cadre des modèles linéaires généralisés, où la variable réponse ($Y$) suit une distribution de Poisson :

$$ y \sim \text{Poisson}(\lambda) $$

Puisque (\lambda) doit être un nombre positif, nous utiliserons la fonction de logarithme comme lien avec le prédicteur linéaire.

$$ \log{\lambda} = \eta = \beta_0 + \sum_{i = 1}^m \beta_i x_i $$

### Estimation des parametres

L'estimation des paramètres d'un **modèle de Poisson** repose sur la méthode du **maximum de vraisemblance (MV)**. Voici les étapes essentielles de l'estimation :

**. Fonction de Vraisemblance**

La fonction de vraisemblance pour (n) observations est donnée par :\
$$L(\beta) = \prod_{i=1}^{n} \frac{\lambda_i^{y_i} e^{-\lambda_i}}{y_i!}$$

En prenant le **logarithme**, on obtient la **log-vraisemblance** :

$$\ell(\beta) = \sum_{i=1}^{n} \left[ y_i \log(\lambda_i) - \lambda_i - \log(y_i!) \right]$$

En remplaçant ( \lambda\_i ) par ( e\^{X_i \beta} ), on obtient :

$$\ell(\beta) = \sum_{i=1}^{n} \left[ y_i (X_i \beta) - e^{X_i \beta} - \log(y_i!) \right]$$

**Estimation par Maximum de Vraisemblance**

L'estimation des paramètres ( \beta ) se fait en **maximisant** la log-vraisemblance. Comme il n'existe pas de solution analytique simple, on utilise des **méthodes numériques** telles que **l'algorithme de Newton-Raphson** ou la **descente de gradient**.

### Analyse de la presence de surdispersion dans les données

Tel que mentionné plus haut, l'indépendance des observations est un prérequis du modèle de Poisson. Sa non-vérification peut entraîner une **surdispersion** des données. Cette surdispersion est quantifiée par un paramètre ( \phi ) qui multiplie la variance attendue : pour une moyenne ( \lambda ), la variance devient donc ( \phi \lambda ).

Plus rarement, il peut arriver que ( \phi \< 1 ), ce qui correspond à une **sous-dispersion** des observations. Contrairement à la surdispersion, où les observations ont tendance à être regroupées, la sous-dispersion traduit une répartition plus régulière que prévu.

Afin de s'assurer de la pertinence du modèle choisi, une **analyse de la surdispersion** a été réalisée à l'aide du \*\*test de surdispersion\*. Les hypothèses du test étaient les suivantes :

-   **Hypothèse nulle ((H_0))** : absence de surdispersion (le modèle de Poisson est approprié).

-   **Hypothèse alternative ((H_1))** : présence de surdispersion (le modèle de Poisson n'est pas adapté).

**Critère de décision** : Une p-value inférieure à 0,05 conduit au rejet de ( H_0), indiquant la présence d'une surdispersion et la nécessité d'envisager un modèle alternatif (comme le quasi-Poisson ou le Poisson négatif).

## Référence

\addcontentsline{toc}{section}{Référence}

::: {#refs}
:::
